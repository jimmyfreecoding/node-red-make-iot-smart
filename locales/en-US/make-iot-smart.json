{
    "make-iot-smart": {
        "paletteLabel": "AI Assistant",
        "label": {
            "name": "Name",
            "apiConfig": "API Config",
            "aiAssistant": "AI Assistant",
            "defaultName": "AI Assistant"
        },
        "placeholder": {
            "name": "AI Assistant"
        },
        "tips": {
            "autoHide": "This node will be automatically hidden and used to connect AI configuration. If deleted, the system will automatically recreate it."
        },
        "help": {
            "description": "Make IoT Smart AI Assistant node provides intelligent AI assistance for Node-RED, supporting automated development and optimization for various IoT scenarios.",
            "details": {
                "overview": "This node integrates advanced AI models to help users quickly build IoT solutions, optimize existing flows, learn Node-RED concepts, and manage system configurations.",
                "features": "Supports seven core scenarios: Learning, Solution Design, Integration Development, Flow Optimization, Configuration Management, System Management, and General Conversation.",
                "aiSidebar": "The node adds an AI assistant panel to the right sidebar, providing an intuitive chat interface and scenario selection functionality.",
                "autoHide": "The node automatically hides in the canvas without affecting flow visualization, while maintaining background functionality.",
                "configuration": "Requires configuring an API config node to set up AI service providers, API keys, and model selection."
            },
            "references": {
                "github": "Project GitHub Repository",
                "npm": "NPM Package Page",
                "docs": "Complete Documentation"
            }
        }
    },
    "common": {
        "label": {
            "tip": "Tip:",
            "details": "Details",
            "features": "Features",
            "aiSidebar": "AI Sidebar",
            "autoHide": "Auto Hide",
            "configuration": "Configuration",
            "references": "References",
            "providers": "Providers",
            "apiKey": "API Key",
            "models": "Models",
            "advanced": "Advanced Options",
            "steps": "Steps",
            "validation": "Validation",
            "security": "Security"
        }
    },
    "api-config": {
        "label": {
            "name": "Name",
            "provider": "API Provider",
            "apiKey": "API Key",
            "model": "Model",
            "maxTokens": "Max Tokens",
            "useDifferentModels": "Use different models for Plan and Act modes"
        },
        "placeholder": {
            "name": "Name",
            "apiKey": "Please enter API key"
        },
        "tips": {
            "apiKey": "This key is stored locally and is only used to make API requests from this extension.",
            "differentModels": "Switching between Plan and Act modes will preserve the API and model used in the previous mode. This can be helpful when using a powerful reasoning model to make plans and then using a cheaper coding model to execute.",
            "capabilities": {
                "noImage": "No image support",
                "noBrowser": "No browser usage support",
                "promptCache": "Supports prompt caching",
                "maxInput": "Max input: 8,000 tokens",
                "cacheWritePrice": "Cache write price: $0.27/million tokens",
                "cacheReadPrice": "Cache read price: $0.07/million tokens",
                "outputPrice": "Output price: $1.10/million tokens"
            }
        },
        "help": {
            "description": "API configuration node for setting up AI service provider connection parameters, including API keys, model selection, and advanced configuration options.",
            "details": {
                "overview": "This configuration node is the core component of Make IoT Smart AI Assistant, responsible for managing connections and authentication with various AI service providers.",
                "providers": "Supports multiple mainstream AI service providers: DeepSeek, OpenAI, and Anthropic, each with different model options and pricing strategies.",
                "apiKey": "API key is the authentication credential for accessing AI services, which needs to be obtained from the respective service provider. Keys are stored securely and will not appear in logs.",
                "models": "Different models can be selected for different use cases, supporting separate model configuration for Plan and Act modes to optimize performance and cost.",
                "advanced": "Advanced options include custom API endpoints, request timeout settings, retry mechanisms, etc., suitable for users with special requirements."
            },
            "configuration": {
                "steps": "Configuration steps: 1. Select AI service provider; 2. Enter valid API key; 3. Choose appropriate model; 4. Adjust advanced settings as needed.",
                "validation": "The system automatically validates API key validity and model availability to ensure correct configuration.",
                "security": "All sensitive information is encrypted and stored following Node-RED security best practices."
            },
            "references": {
                "deepseek": "DeepSeek API Documentation",
                "openai": "OpenAI API Documentation",
                "anthropic": "Anthropic API Documentation",
                "troubleshooting": "Troubleshooting Guide"
            }
        },
        "validation": {
            "apiKeyFiltered": "Illegal characters filtered, API key can only contain numbers, letters and symbols"
        }
    },
    "errors": {
        "apiKeyMissing": "API key not configured, please set API key in configuration node",
        "apiKeyAuthFailed": "API key authentication failed, please check if the API key in the configuration node is correct",
        "modelMissing": "Model name missing, please select a model in the configuration node",
        "configNodeNotFound": "API configuration node not found",
        "networkError": "Network error",
        "executionFailed": "Execution failed",
        "toolExecutionFailed": "Tool execution failed",
        "unknownError": "An unknown error occurred"
    },
    "messages": {
        "apiConfigInit": "API configuration node initialization",
        "mcpNotEnabled": "MCP not enabled - enableMcp is false",
        "mcpCommandNotConfigured": "MCP command not configured",
        "mcpInitStart": "Starting MCP connection initialization",
        "mcpInitSuccess": "MCP initialization successful",
        "mcpInitFailed": "MCP initialization failed",
        "aiHelperNodeExists": "AI assistant node already exists, no need to create",
        "aiHelperNodeCreated": "AI assistant node automatically created successfully",
        "aiHelperNodeCreating": "AI assistant node not found, creating automatically...",
        "flowCreationSuccess": "Flow creation successful!",
        "toolExecutionSuccess": "Applied",
        "retry": "Retry",
        "apiConfigNotFound": "API configuration node not found, unable to automatically create AI assistant node",
        "initializingAIHelper": "Setting setTimeout to call ensureAIHelperNode...",
        "aiHelperNodeChecking": "setTimeout triggered, starting to execute ensureAIHelperNode..."
    },
    "status": {
        "ready": "Ready",
        "connected": "Connected",
        "disconnected": "Disconnected",
        "error": "Error"
    }
}