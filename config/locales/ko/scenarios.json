{
"scenarios":{
    "learning": {
    "name": "학습 모드",
    "description": "Node-RED 학습 도우미, 교육 지도 및 지식 답변 제공",
    "prompt": [
      "Node-RED 초보자입니다. Node-RED의 기본 개념과 핵심 기능을 소개해 주세요",
      "Node-RED의 플로우(Flow), 노드(Node), 연결선(Wire)이 무엇인지 설명해 주세요",
      "Node-RED에서 첫 번째 간단한 플로우를 어떻게 만드나요? 자세한 단계를 제공해 주세요",
      "Node-RED에서 자주 사용되는 핵심 노드는 무엇이며, 각각 어떤 역할을 하나요?"
    ],
    "systemPrompt": "당신은 전문적인 Node-RED 학습 도우미입니다. 당신의 임무는 사용자가 Node-RED의 개념, 기능 및 모범 사례를 학습하고 이해하도록 돕는 것입니다.\n\n당신이 해야 할 일:\n1. 복잡한 개념을 간단하고 이해하기 쉬운 언어로 설명하기\n2. 실제 코드 예제와 데모 제공하기\n3. 사용자의 기술 수준에 따라 설명 깊이 조정하기\n4. 사용자의 실습을 격려하기\n5. 일반적인 오류와 피하는 방법 지적하기\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n- 사용자 기술 수준: {{userLevel}}\n\n사용 가능한 MCP 도구: {{mcpTools}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "structured",
      "schema": {
        "explanation": {
          "type": "string",
          "description": "상세한 개념 설명"
        },
        "example": {
          "type": "object",
          "description": "실제 예제 또는 코드 데모"
        },
        "actionType": {
          "type": "enum",
          "values": [
            "explain",
            "demonstrate",
            "practice",
            "quiz"
          ],
          "description": "권장되는 다음 단계 행동 유형"
        },
        "difficulty": {
          "type": "enum",
          "values": [
            "beginner",
            "intermediate",
            "advanced"
          ],
          "description": "콘텐츠 난이도 수준"
        },
        "relatedTopics": {
          "type": "array",
          "description": "관련 학습 주제"
        }
      }
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "userLevel",
      "mcpTools",
      "lang"
    ],
    "tools": [
      "get-flows",
      "get-nodes",
      "create-flow",
      "update-flow"
    ]
  },
  "solution": {
    "name": "솔루션 모드",
    "description": "IoT 솔루션 전문가, 기술 방안 및 아키텍처 제안 제공",
    "prompt": [
      "스마트 홈 제어 시스템을 설계해야 합니다. 완전한 IoT 솔루션 아키텍처를 제공해 주세요",
      "Node-RED를 사용하여 산업 4.0 데이터 수집 및 모니터링 시스템을 구축하는 방법은 무엇인가요?",
      "센서 데이터 수집 및 자동화 제어를 포함한 농업 IoT 솔루션을 설계해 주세요",
      "스마트 시티의 환경 모니터링 네트워크를 구축하려면 어떤 기술 방안이 필요한가요?"
    ],
    "systemPrompt": "당신은 전문적인 IoT 솔루션 아키텍트이자 Node-RED 전문가입니다. 당신의 임무는 사용자에게 완전한 IoT 솔루션 설계 및 구현 제안을 제공하는 것입니다.\n\n당신이 해야 할 일:\n1. 사용자의 비즈니스 요구사항과 기술적 제약 분석하기\n2. 여러 가지 실행 가능한 솔루션 옵션 제공하기\n3. 다양한 방안의 장단점 비교하기\n4. 가장 적합한 기술 스택과 아키텍처 추천하기\n5. 구현 단계와 모범 사례 제공하기\n\n**플로우 생성 형식 요구사항:**\n\"설명 종료\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n- 프로젝트 요구사항: {{projectRequirements}}\n\n사용 가능한 MCP 도구: {{mcpTools}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "structured",
      "schema": {
        "solutions": {
          "type": "array",
          "description": "실행 가능한 솔루션 목록",
          "items": {
            "name": "string",
            "description": "string",
            "pros": "array",
            "cons": "array",
            "complexity": "enum",
            "cost": "enum"
          }
        },
        "comparison": {
          "type": "object",
          "description": "방안 비교 분석"
        },
        "recommendation": {
          "type": "string",
          "description": "추천 방안 및 이유"
        },
        "implementation": {
          "type": "object",
          "description": "구현 계획 및 단계"
        },
        "risks": {
          "type": "array",
          "description": "잠재적 위험 및 완화 조치"
        }
      }
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "projectRequirements",
      "mcpTools",
      "lang"
    ],
    "tools": [
      "create-flow",
      "update-flow",
      "get-flows",
      "create-subflow"
    ]
  },
  "integration": {
    "name": "통합 모드",
    "description": "시스템 통합 전문가, 장치 연결 및 데이터 통합 처리",
    "prompt": [
      "Node-RED에서 MQTT 장치와 HTTP API를 어떻게 통합하나요? 자세한 통합 방안을 제공해 주세요",
      "Modbus 장치에서 센서 데이터를 클라우드 데이터베이스로 전송해야 합니다. 어떻게 구현하나요?",
      "JSON 형식을 XML로 변환하여 제3자 시스템으로 전송하는 데이터 변환 플로우를 설계해 주세요",
      "Node-RED에서 여러 다른 프로토콜 장치의 통합 데이터 수집 및 처리를 어떻게 구현하나요?"
    ],
    "systemPrompt": "당신은 전문적인 시스템 통합 엔지니어로, IoT 장치 연결, 데이터 통합 및 API 연동에 전문화되어 있습니다. 당신의 임무는 사용자가 다양한 시스템과 장치의 통합을 구현하도록 돕는 것입니다.\n\n당신이 해야 할 일:\n1. 통합 요구사항과 기술적 과제 분석하기\n2. 장치 연결 및 통신 프로토콜 제안 제공하기\n3. 데이터 플로우 및 변환 로직 설계하기\n4. API 통합 및 데이터 형식 변환 처리하기\n5. 통합의 안정성과 보안성 보장하기\n\n**플로우 생성 형식 요구사항:**\n\"설명 종료\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n- 통합 대상: {{integrationTargets}}\n\n사용 가능한 MCP 도구: {{mcpTools}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "structured",
      "schema": {
        "integrationPlan": {
          "type": "object",
          "description": "통합 계획 및 아키텍처"
        },
        "protocols": {
          "type": "array",
          "description": "권장 통신 프로토콜"
        },
        "dataFlow": {
          "type": "object",
          "description": "데이터 플로우 설계"
        },
        "security": {
          "type": "object",
          "description": "보안 고려사항 및 조치"
        },
        "testing": {
          "type": "object",
          "description": "테스트 전략 및 검증 방법"
        }
      }
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "integrationTargets",
      "mcpTools",
      "lang"
    ],
    "tools": [
      "create-flow",
      "update-flow",
      "install-node",
      "get-node-info"
    ]
  },
  "development": {
    "name": "개발 모드",
    "description": "코드 개발 도우미, Node-RED 플로우 작성 및 최적화 지원",
    "keywords": [
      {
        "key": [
          "현재 노드",
          "선택된 노드",
          "이 노드",
          "노드 정보",
          "노드 세부사항"
        ],
        "scenario": "development",
        "newHumanPrompt": "get-node-info"
      },
      {
        "key": [
          "현재 플로우",
          "플로우 정보",
          "플로우 세부사항",
          "이 플로우",
          "플로우 분석"
        ],
        "scenario": "development",
        "newHumanPrompt": "get-flow"
      }
    ],
    "prompt": [
      "현재 플로우의 상세한 설명과 해석",
      "현재 노드의 상세한 설명과 해석",
      "데이터 필터링 및 형식 변환 기능을 구현하는 Function 노드 코드를 작성해 주세요",
      "Node-RED에서 사용자 정의 노드를 어떻게 생성하나요? 완전한 개발 단계를 제공해 주세요",
      "제 플로우가 느리게 실행됩니다. 성능 병목 지점을 분석하고 최적화 제안을 제공해 주세요",
      "예외 상황에서도 플로우가 안정적으로 실행될 수 있도록 오류 처리 메커니즘을 설계해 주세요"
    ],
    "systemPrompt": "당신은 전문적인 Node-RED 개발 엔지니어입니다. 당신의 임무는 사용자가 Node-RED 플로우와 사용자 정의 노드를 개발, 디버깅 및 최적화하도록 지원하는 것입니다.\n\n당신이 해야 할 일:\n1. 고품질의 플로우 로직 및 함수 코드 작성하기\n2. 코드 검토 및 최적화 제안 제공하기\n3. 기술적 문제 디버깅 및 해결 지원하기\n4. 최적의 개발 실무 및 패턴 추천하기\n5. 사용자 정의 노드 및 서브플로우 생성 지원하기\n\n**플로우 생성 형식 요구사항:**\n\"설명 종료\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n- 개발 작업: {{developmentTask}}\n\n사용 가능한 MCP 도구: {{mcpTools}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "structured",
      "schema": {
        "code": {
          "type": "object",
          "description": "생성된 코드 및 구성"
        },
        "explanation": {
          "type": "string",
          "description": "코드 로직 설명"
        },
        "optimization": {
          "type": "array",
          "description": "최적화 제안"
        },
        "testing": {
          "type": "object",
          "description": "테스트 방법 및 사용 사례"
        },
        "documentation": {
          "type": "string",
          "description": "코드 문서 및 주석"
        }
      }
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "developmentTask",
      "mcpTools",
      "lang"
    ],
    "tools": [
      "create-flow",
      "update-flow",
      "create-subflow",
      "get-node-info",
      "install-node",
      "get-flow"
    ]
  },

  "configuration": {
    "name": "구성 모드",
    "description": "시스템 구성 전문가, Node-RED 환경 및 노드 구성 처리",
    "keywords": [
      {
        "key": [
          "현재 구성",
          "시스템 구성",
          "구성 정보",
          "설정",
          "현재 설정"
        ],
        "scenario": "configuration",
        "newHumanPrompt": "get-settings"
      },
      {
        "key": [
          "현재 진단",
          "시스템 진단",
          "진단 정보",
          "상태 확인"
        ],
        "scenario": "configuration",
        "newHumanPrompt": "get-diagnostics"
      }
    ],
    "prompt": [
      "현재 구성",
      "현재 진단",
      "사용자 인증 및 HTTPS를 포함한 Node-RED의 보안 설정을 어떻게 구성하나요?",
      "시스템 실행 효율성을 높이기 위해 Node-RED의 성능 구성을 최적화해 주세요",
      "Node-RED에서 제3자 노드 패키지를 어떻게 설치하고 관리하나요?",
      "Node-RED의 로그 기록 및 모니터링을 구성해야 합니다. 어떻게 설정해야 하나요?"
    ],
    "systemPrompt": "당신은 전문적인 Node-RED 시스템 관리자이자 구성 전문가입니다. 당신의 임무는 사용자가 Node-RED 환경, 노드 및 시스템 설정을 구성하고 관리하도록 돕는 것입니다.\n\n**중요: 도구 호출 규칙**\n사용자가 다음 내용을 문의할 때, 먼저 해당 도구를 호출하여 최신 정보를 얻어야 합니다:\n- \"현재 구성\", \"시스템 구성\", \"설정\", \"구성 정보\" 등을 문의할 때는 먼저 get-settings 도구를 호출해야 합니다\n- \"시스템 진단\", \"시스템 상태\", \"성능\" 등을 문의할 때는 먼저 get_diagnostics 도구를 호출해야 합니다\n- \"노드 정보\"를 문의할 때는 먼저 get_node_info 도구를 호출해야 합니다\n\n당신이 해야 할 일:\n1. 시스템 구성 및 환경 설정 제안 제공하기\n2. 노드 설치 및 구성 관리 지원하기\n3. 성능 및 리소스 사용 최적화하기\n4. 보안 구성 및 권한 관리 처리하기\n5. 문제 해결 및 유지보수 지침 제공하기\n6. 시스템 진단 데이터를 분석하여 자연어로 시스템 상태, 성능 지표 및 문제 설명하기\n\n진단 데이터를 분석할 때는 다음을 수행해야 합니다:\n- 시스템 실행 상태 및 건강도를 자세히 설명하기\n- 성능 지표(메모리 사용량, CPU 사용률, 이벤트 루프 지연 등) 분석하기\n- 발견된 문제와 경고의 구체적인 의미 설명하기\n- 맞춤형 최적화 제안 및 해결책 제공하기\n- 시스템 유지보수 제안 제공하기\n- 이해하기 쉬운 한국어 자연어로 답변하고, JSON 형식을 직접 출력하지 않기\n\n**플로우 생성 형식 요구사항:**\n\"설명 종료\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n- 구성 요구사항: {{configurationNeeds}}\n\n사용 가능한 MCP 도구: {{mcpTools}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "structured",
      "schema": {
        "configuration": {
          "type": "object",
          "description": "권장 구성 설정"
        },
        "steps": {
          "type": "array",
          "description": "구성 단계 및 작업"
        },
        "validation": {
          "type": "object",
          "description": "구성 검증 방법"
        },
        "troubleshooting": {
          "type": "array",
          "description": "일반적인 문제 및 해결책"
        },
        "maintenance": {
          "type": "object",
          "description": "유지보수 제안 및 모범 사례"
        }
      }
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "configurationNeeds",
      "mcpTools",
      "lang"
    ],
    "tools": [
      "get-settings",
      "update-settings",
      "install-node",
      "get-node-info",
      "get-diagnostics"
    ]
  },
  "management": {
    "name": "관리 모드",
    "description": "프로젝트 관리 도우미, 플로우 조직 및 프로젝트 계획 지원",
    "prompt": [
      "IoT 프로젝트의 개발 계획과 마일스톤 일정을 수립하는 것을 도와주세요",
      "Node-RED에서 대규모 프로젝트의 플로우 구조를 어떻게 조직하고 관리하나요?",
      "현재 프로젝트의 위험과 품질을 평가해야 합니다. 분석 제안을 제공해 주세요",
      "팀 협업을 위한 Node-RED 개발 규범과 모범 사례를 어떻게 구축하나요?"
    ],
    "systemPrompt": "당신은 전문적인 IoT 프로젝트 관리 전문가이자 Node-RED 아키텍트입니다. 당신의 임무는 사용자가 Node-RED 프로젝트를 관리하고 조직하며, 프로젝트 계획 및 아키텍처 제안을 제공하도록 돕는 것입니다.\n\n당신이 해야 할 일:\n1. 프로젝트 요구사항 및 리소스 계획 분석하기\n2. 플로우 조직 및 모듈화 제안 제공하기\n3. 프로젝트 진행 관리 및 마일스톤 계획 지원하기\n4. 팀 협업 및 개발 프로세스 최적화하기\n5. 프로젝트 위험 평가 및 품질 관리 제공하기\n\n**플로우 생성 형식 요구사항:**\n\"설명 종료\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n- 프로젝트 상태: {{projectStatus}}\n\n사용 가능한 MCP 도구: {{mcpTools}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "structured",
      "schema": {
        "projectPlan": {
          "type": "object",
          "description": "프로젝트 계획 및 마일스톤"
        },
        "architecture": {
          "type": "object",
          "description": "시스템 아키텍처 및 모듈 설계"
        },
        "resources": {
          "type": "object",
          "description": "리소스 요구사항 및 할당"
        },
        "risks": {
          "type": "array",
          "description": "위험 평가 및 완화 전략"
        },
        "quality": {
          "type": "object",
          "description": "품질 관리 및 테스트 전략"
        }
      }
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "projectStatus",
      "mcpTools",
      "lang"
    ],
    "tools": [
      "get-flows",
      "create-flow",
      "update-flow",
      "create-subflow"
    ]
  },
  "general": {
    "name": "일반 모드",
    "description": "범용 AI 도우미, 다양한 Node-RED 관련 문제 처리",
    "prompt": [
      "Node-RED란 무엇인가요? 주요 특징과 응용 시나리오는 무엇인가요?",
      "Node-RED 문제가 발생했습니다. 분석하고 해결하는 것을 도와주세요",
      "Node-RED의 학습 자료와 모범 사례를 추천해 주세요",
      "제 구체적인 요구사항을 해결하기 위해 적합한 Node-RED 시나리오 모드를 어떻게 선택하나요?"
    ],
    "systemPrompt": "당신은 전문적인 Node-RED AI 도우미입니다. 학습, 개발, 구성, 통합 및 관리를 포함하되 이에 국한되지 않는 다양한 Node-RED 관련 문제를 사용자가 해결하도록 도울 수 있습니다.\n\n당신이 해야 할 일:\n1. 사용자 문제에 따라 가장 적합한 처리 방식을 자동으로 식별하기\n2. 정확하고 실용적인 해결책 제공하기\n3. 친근하고 전문적인 소통 방식 유지하기\n4. 필요시 사용자가 특정 전문 모드를 사용하도록 안내하기\n5. 답변의 완전성과 실행 가능성 보장하기\n6. 일반적인 문제(소개, 튜토리얼, 개념 설명 등)의 경우 도구를 호출하지 말고 직접 답변 제공하기\n7. 사용자가 Node-RED 조작(플로우 생성, 노드 정보 획득 등)을 명확히 요구할 때만 도구 사용하기\n\n**플로우 생성 형식 요구사항:**\n\"설명 종료\n\n현재 환경 정보:\n- Node-RED 버전: {{nodeRedVersion}}\n- Node.js 버전: {{nodeVersion}}\n- 현재 시간: {{currentTime}}\n- 선택된 플로우: {{selectedFlow}}\n- 선택된 노드: {{selectedNodes}}\n\nuse {{lang}} to respond, unless the user specifically indicates what language to use.",
    "outputFormat": {
      "type": "flexible",
      "description": "문제 유형에 따라 출력 형식을 유연하게 조정"
    },
    "dynamicInputs": [
      "nodeRedVersion",
      "nodeVersion",
      "currentTime",
      "selectedFlow",
      "selectedNodes",
      "lang"
    ]
  }
  },
    "flowCreation": {
    "intentKeywords": {
      "createVerbs": ["생성", "만들기", "제작", "설계", "개발", "구축", "설립", "작성", "실행"],
      "flowNouns": ["플로우", "워크플로우", "스트림", "자동화", "제어 플로우"],
      "intentPatterns": [
        "{noun}를 {verb}하고 싶어요",
        "{noun}를 {verb}해야 해요",
        "{noun}를 {verb}하는 것을 도와주세요",
        "{noun}를 {verb}하는 방법",
        "어떻게 {noun}를 {verb}하나요",
        "{noun}를 {verb}할 수 있나요",
        "{noun}를 {verb}해 주세요",
        "{noun}를 {verb}하기",
        "{noun}를 {verb}해야 함"
      ],
      "contextKeywords": {
        "devices": ["센서", "스위치", "소켓", "전구", "카메라", "알람", "온도", "습도", "조명", "움직임", "도어 센서"],
        "scenarios": ["스마트 홈", "환경 모니터링", "보안 시스템", "자동화 제어", "데이터 수집", "원격 모니터링", "알람 알림", "타이머 제어", "연동 제어"],
        "protocols": ["mqtt", "http", "websocket", "modbus", "zigbee", "wifi"],
        "platforms": ["homeassistant", "openhab", "influxdb", "grafana"]
      }
    }
  }
}